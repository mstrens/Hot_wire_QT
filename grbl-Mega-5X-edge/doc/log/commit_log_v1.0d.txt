----------------
Date: 2017-08-01
Author: Sonny Jeon
Subject: Fixed RAMPS control pin conflict

[fix] RAMPS soft-reset control pin interfered with Z-enable. Shifted
all control pins by plus one on the analog pins. RAMPS defines these
pins as belonging to the AUX 2 port, which is assumed to be unused.


----------------
Date: 2017-07-17
Author: Sonny Jeon
Subject: Merge pull request #28 from docwelch/Ramps-1.4

Add Ramps 1.4 Board Support. Note: This is highly experimental and your mileage may vary. This will be polished soon.

----------------
Date: 2017-07-17
Author: Sonny Jeon
Subject: Merge branch 'edge' into Ramps-1.4

----------------
Date: 2017-07-17
Author: Sonny Jeon
Subject: Syncing mainstream v1.1f

- See details in mainstream commits from 1/14/17 to 7/17/17.


----------------
Date: 2017-06-26
Author: docwelch
Subject: Add Ramps 1.4 Board Support

Changes based on @jekhor’s work
Uses D8 as the spindle pin


----------------
Date: 2017-03-19
Author: Sonny Jeon
Subject: Moved Grbl logo files to separate repo.


----------------
Date: 2017-03-19
Author: Sonny Jeon
Subject: Update README.md

----------------
Date: 2017-03-19
Author: Sonny Jeon
Subject: Update README.md

----------------
Date: 2017-01-14
Author: Sonny Jeon
Subject: Pulled in Grbl-328p changes.

- [fix] Spindle enable pin behavior corrected to be independent of the
PWM output. There was some crossover behavior.

- [fix] Tool numbers are now tracking and reporting correctly.

- [fix] G-code parser error when G0 is commanded without a feed rate
word while in inverse time mode.

- [fix] Config file was missing an option for probing behavior.

- [doc] Updated documentation.


----------------
Date: 2016-12-19
Author: Sonny Jeon
Subject: Alarm handling bug fix.

- Applied an alarm handling bug fix that would not show the correct
alarm code, nor clear the alarm. It would occasionally go into an
infinite loop and would usually happen during a homing cycle fail.


----------------
Date: 2016-12-19
Author: Sonny Jeon
Subject: Spindle PWM update for Mega2560

- Spindle PWM is set with a 16-bit value, rather than 8-bit on a 328p.
Updated stepper.c to reflect this change.


----------------
Date: 2016-12-19
Author: Sonny Jeon
Subject: Grbl v1.1e port to Mega2560 branch

- v1.1e

- Ported all current changes from the main Grbl 328p repo to the
Mega2560 branch. Main differences are increased planner, RX, TX, and
line buffers. And an optional sleep timeout feature.

- WARNING: Code compiles, but has not been tested.


----------------
Date: 2016-08-31
Author: chamnit
Subject: Minor bug fix to certain safety conditions.

- Grbl would become unresponsive, if a safety door is reset when active
and then homed immediately after. A system variable was not properly
restored. Now fixed.


----------------
Date: 2016-05-10
Author: chamnit
Subject: Planner and printFloat update.

- Planner model update. Improves performance for machines with
different accelerations on each axes. Particularly for 3D carving.

- Print float update to print 13 (from 10) characters. Help reduce
print errors for unusually long floating point values.


----------------
Date: 2016-04-10
Author: chamnit
Subject: Alarm and safety door bug fix.

- Typo in protocol.c caused a safety door to lock out the system during
an alarm. The correct character should keep that from happening and
bring back the original door/alarm behavior.


----------------
Date: 2016-04-04
Author: Sonny Jeon
Subject: Update readme and sleep documentation.


----------------
Date: 2016-04-03
Author: chamnit
Subject: Sleep feature. General re-org and bug fixes.

- New sleep safety feature. If powered components (spindle/coolant) are
enabled and if there is no motion, incoming data, or commands, Grbl
will start a short sleep countdown. Upon elapse, Grbl will depower and
enter a sleep state. If parking is enabled, sleep will also park the
machine. Only a reset will exit sleep and the job will be
unrecoverable. This is purely a safety feature to address serial
disconnection problems.

- Re-organized the cpu-map and default files and put them back into
single files. Makes it easier for OEMs to just drop in their
configuration files for a custom build.

- Introduced a single-file configuration method for OEMs. See config.h
for details. Basically just add the cpu_map and default files to the
bottom of config.h.

- Moved the control pin invert mask to config.h

- Refactored some cpu_map defines to be more descriptive of what they
belong to.

- Added invert coolant pins options to config.h

- Added a new realtime status report. Only a proposal at this time, and
the old classic report is enabled by default. Comment out the
USE_CLASSIC_REALTIME_REPORT define in config.h to use the new report.
Please note that the new report is not finalized and is subject to
change.


----------------
Date: 2016-03-20
Author: chamnit
Subject: EEPROM string checks and re-added some compile options.

- Incremented version to v1.0d, but more changes to come before release.

- EEPROM strings were linked to the LINE_BUFFER_SIZE, which were
increased from 80 to 256. This caused a problem with EEPROM storage and
would corrupt any existing data there. Now fixed to preserve the data
there by limiting the size read or written to EEPROM to 80 characters.

- When EEPROM string length is exceeded, Grbl will respond with a “Line
length exceeded” error.

- Re-added a couple of compile-time options: realtime line numbers and
rate reporting. This is to ensure backward support for GUIs for the
time being. These removal options will go away eventually before they
become hard-coded in. (They will be toggle-able with the status report
mask in settings though.)


----------------
Date: 2016-03-19
Author: Sonny Jeon
Subject: Removed 328p-related code. Enabled options by default.

- Removed all of the 328p-related code, which seemed to clean up things
quite a bit without all those ifdefs everywhere.

- Since the 328p was very memory and flash limited, lots of
compile-time options were disabled by default. These have been now been
enabled by default. As they are considered generally helpful and does
not significantly impact how Grbl runs.

- For example, status reports can now report back real time feed rate
and line number being executed. Variable spindle is standard with a
separate spindle enable pin. Grbl will now check if a user setting has
exceeded the maximum step frequency and report an error, if so. And
finally, M7 flood coolant is enabled.

- In addition, all buffers have been significantly increased to take
advantage of the additional memory available. The planner buffer can
plan up to 36 motions. The serial buffers have been doubled in size
(256/128 bytes RX/TX). And the longest line Grbl can accept is 256
bytes, per the g-code standard (Grbl 328p is limited to 80).

- Removed the cpu_map folder, since this version is strictly Mega2560.


----------------
Date: 2016-03-19
Author: chamnit
Subject: Update README


----------------
Date: 2016-03-19
Author: Sonny Jeon
Subject: No variable spindle and spindle speed fix.

- Soft limit errors were stuck in a feed hold without notifying the
user why it was in a hold. When resumed, the soft limit error would
kick in. Issue should be fixed to behave as intended to automatically
hold and issue a soft limit alarm once the machine has come to a stop.

