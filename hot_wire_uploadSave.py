import configparser

def stringToListOfFloat(my_string):
    if len(my_string) > 2:
        li = list(my_string[1:-1].split(","))
        return  [float(i) for i in li]
    return []

def getProjectFromFile(window, filename):
    config =  configparser.ConfigParser()
    config.add_section("Profil")
    config.add_section("Transform")
    config.add_section("Bloc")
    config.add_section("Material")
    config.add_section("Table")
    config.add_section("Cut")
    config.add_section("Guillotine")
    
    config.read(filename)
    window.oRootX = stringToListOfFloat(config.get("Profil", "RootX"))
    window.oRootY = stringToListOfFloat(config.get("Profil", "RootY"))
    window.oRootS = stringToListOfFloat(config.get("Profil", "RootS"))
    window.oTipX = stringToListOfFloat(config.get("Profil", "TipX"))
    window.oTipY = stringToListOfFloat(config.get("Profil", "TipY"))
    window.oTipS = stringToListOfFloat(config.get("Profil", "TipS"))
    window.nameRoot = config.get("Profil", "nameRoot")
    window.plotORoot.setTitle(window.nameRoot)
    window.nameTip = config.get("Profil", "nameTip")
    window.plotOTip.setTitle(config.get("Profil", "nameTip"))
    
    window.cRoot.setValue(config.getfloat("Transform", "cRoot"))
    window.cTip.setValue(config.getfloat("Transform", "cTip"))
    try:
        window.cbComplexProfiles.setChecked(config.getint("Transform", "cnComplexProfiles"))
    except:
        pass
    window.incidenceRoot.setValue(config.getfloat("Transform", "incidenceRoot"))
    window.thicknessRoot.setValue(config.getfloat("Transform", "thicknessRoot"))
    window.vInvertRoot.setChecked(config.getint("Transform", "vInvertRoot"))
    window.incidenceTip.setValue(config.getfloat("Transform", "incidenceTip"))
    window.thicknessTip.setValue(config.getfloat("Transform", "thicknessTip"))
    window.vInvertTip.setChecked(config.getint("Transform", "vInvertTip"))
    window.covering.setValue(config.getfloat("Transform", "covering"))
    window.keepChord.setChecked(config.getint("Transform", "keepChord"))
    window.smooth.setChecked(config.getint("Transform", "smooth"))
    window.nbrPoints.setValue(config.getint("Transform", "nbrPoints"))
    window.repartition.setValue(config.getfloat("Transform", "repartition"))
    window.reducePoints.setChecked(config.getint("Transform", "reducePoints"))
    
    window.blocLX.setValue(config.getfloat("Bloc", "blocLX"))
    window.blocHZ.setValue(config.getfloat("Bloc", "blocHZ"))
    window.fLeading.setValue(config.getfloat("Bloc", "fLeading"))
    window.mLeading.setValue(config.getfloat("Bloc", "mLeading"))
    window.mTrailingRoot.setValue(config.getfloat("Bloc", "mTrailingRoot"))
    window.mTrailingTip.setValue(config.getfloat("Bloc", "mTrailingTip"))
    window.rbLeftWing.setChecked(config.getint("Bloc", "rbLeftWing"))
    window.rbRightWing.setChecked(config.getint("Bloc", "rbRightWing"))
    window.rbTableToBlockLeft.setChecked(config.getint("Bloc", "rbTableToBlockLeft"))
    window.rbTableToBlockRight.setChecked(config.getint("Bloc", "rbTableToBlockRight"))
    window.blocToTableLeft.setValue(config.getfloat("Bloc", "blocToTableLeft"))
    window.blocToTableRight.setValue(config.getfloat("Bloc", "blocToTableRight"))
    window.blocToTableTrailingRoot.setValue(config.getfloat("Bloc", "blocToTableTrailingRoot"))
    #window.blocToTableTrailingTip.setValue(config.getfloat("Bloc", "blocToTableTrailingTip"))
    #window.blocToTableLeadingRoot.setValue(config.getfloat("Bloc", "blocToTableLeadingRoot"))
    #window.blocToTableLeadingTip.setValue(config.getfloat("Bloc", "blocToTableLeadingTip"))



    """
    window.hTrailingRoot.setValue(config.getfloat("Bloc", "hTrailingRoot"))
    window.hTrailingTip.setValue(config.getfloat("Bloc", "hTrailingTip"))
    window.hLeadingRoot.setValue(config.getfloat("Bloc", "hLeadingRoot"))
    window.hLeadingTip.setValue(config.getfloat("Bloc", "hLeadingTip"))
    window.hMaxRoot.setValue(config.getfloat("Bloc", "hMaxRoot"))
    window.hMaxTip.setValue(config.getfloat("Bloc", "hMaxTip"))
    window.hMinRoot.setValue(config.getfloat("Bloc", "hMinRoot"))
    window.hMinTip.setValue(config.getfloat("Bloc", "hMinTip"))
    """
    window.hOffset.setValue(config.getfloat("Bloc", "hOffset"))
    window.hProfil.setValue(config.getfloat("Bloc", "hProfil"))
    window.diedral.setValue(config.getfloat("Bloc", "diedral"))
    window.cbAlignProfiles.setCurrentIndex(config.getint("Bloc", "cbAlignProfiles"))
    #window.rbAlignTrailing.setChecked(config.getint("Bloc", "rbAlignTrailing"))
    #window.rbAlignLeading.setChecked(config.getint("Bloc", "rbAlignLeading"))
    #window.rbAlignIntrados.setChecked(config.getint("Bloc", "rbAlignIntrados"))
    #window.rbAlignExtrados.setChecked(config.getint("Bloc", "rbAlignExtrados"))

    window.angleInRoot.setValue(config.getfloat("Bloc", "angleInRoot"))
    window.angleInTip.setValue(config.getfloat("Bloc", "angleInTip"))
    window.angleOutRoot.setValue(config.getfloat("Bloc", "angleOutRoot"))
    window.angleOutTip.setValue(config.getfloat("Bloc", "angleOutTip"))
    window.gbXLeadingActive.setChecked(config.getint("Bloc", "gbXLeadingActive"))
    window.cbXLeadingCut.setCurrentText(config.get("Bloc", "cbXLeadingCut"))
    window.xLeadingAngle1Root.setValue(config.getfloat("Bloc", "xLeadingAngle1Root"))
    window.xLeadingAngle2Root.setValue(config.getfloat("Bloc", "xLeadingAngle2Root"))
    window.xLeadingAngle1Tip.setValue(config.getfloat("Bloc", "xLeadingAngle1Tip"))
    window.xLeadingAngle2Tip.setValue(config.getfloat("Bloc", "xLeadingAngle2Tip"))
    window.xLeadingHeight1Root.setValue(config.getfloat("Bloc", "xLeadingHeight1Root"))
    window.xLeadingHeight2Root.setValue(config.getfloat("Bloc", "xLeadingHeight2Root"))
    window.xLeadingHeight1Tip.setValue(config.getfloat("Bloc", "xLeadingHeight1Tip"))
    window.xLeadingHeight2Tip.setValue(config.getfloat("Bloc", "xLeadingHeight2Tip"))
    window.xLeadingLengthRoot.setValue(config.getfloat("Bloc", "xLeadingLengthRoot"))
    window.xLeadingLengthTip.setValue(config.getfloat("Bloc", "xLeadingLengthTip"))
    #material
    window.mSpeedHigh.setValue(config.getfloat("Material", "mSpeedHigh"))
    window.mSpeedHalf.setValue(config.getfloat("Material", "mSpeedHalf"))
    window.mSpeedLow.setValue(config.getfloat("Material", "mSpeedLow"))
    window.mRadSpHigh.setValue(config.getfloat("Material", "mRadSpHigh"))
    window.mRadSpHalf.setValue(config.getfloat("Material", "mRadSpHalf"))
    window.mHeatSpHigh.setValue(config.getfloat("Material", "mHeatSpHigh"))
    window.mHeatSpLow.setValue(config.getfloat("Material", "mHeatSpLow"))
    window.mName.setText(config.get("Material", "mName"))
    window.mUsualCutSpeed.setValue(config.getfloat("Material", "mUsualCutSpeed"))
    
    window.tableYY.setValue(config.getfloat("Table", "tableYY"))
    window.tableYG.setValue(config.getfloat("Table", "tableYG"))
    window.tableYD.setValue(config.getfloat("Table", "tableYD"))
    window.cMaxY.setValue(config.getfloat("Table", "cMaxY"))
    window.cMaxZ.setValue(config.getfloat("Table", "cMaxZ"))
    window.vMaxY.setValue(config.getfloat("Table", "vMaxY"))
    window.vMaxZ.setValue(config.getfloat("Table", "vMaxZ"))
    window.tHeatingMax.setValue(config.getfloat("Table", "tHeatingMax"))
    window.tName.setText(config.get("Table", "tName"))
    window.tComPort.insertItem(0,config.get("Table", "tComPort"))
    window.tComPort.setCurrentText(config.get("Table", "tComPort"))
    window.tBaudrate.setCurrentText(config.get("Table", "tBaudrate"))
    window.tPreHeat.setValue(config.getfloat("Table", "tPreHeat"))
    window.tPostHeat.setValue(config.getfloat("Table", "tPostHeat"))
    
    window.vCut.setValue(config.getfloat("Table", "vCut"))
    window.gCodeStart1.setText(config.get("Table", "gCodeStart1"))
    window.gCodeStart2.setText(config.get("Table", "gCodeStart2"))
    window.gCodeStart3.setText(config.get("Table", "gCodeStart3"))
    window.gCodeStart4.setText(config.get("Table", "gCodeStart4"))
    window.gCodeEnd1.setText(config.get("Table", "gCodeEnd1"))
    window.gCodeEnd2.setText(config.get("Table", "gCodeEnd2"))
    window.gCodeEnd3.setText(config.get("Table", "gCodeEnd3"))
    window.gCodeEnd4.setText(config.get("Table", "gCodeEnd4"))
    window.gCodeLetters.setText(config.get("Table", "gCodeLetters"))
    
    window.gCuttingSpeed.setValue(config.getfloat("Guillotine", "gCuttingSpeed"))
    window.gApplyCalculatedHeating.setChecked(config.getint("Guillotine", "gApplyCalculatedHeating"))
    window.gHeating.setValue(config.getfloat("Guillotine", "gHeating"))

def getMaterialFromFile(window,filename):
    config =  configparser.ConfigParser()
    config.add_section("Material")    
    config.read(filename)
    window.mSpeedHigh.setValue(config.getfloat("Material", "mSpeedHigh"))
    window.mSpeedHalf.setValue(config.getfloat("Material", "mSpeedHalf"))
    window.mSpeedLow.setValue(config.getfloat("Material", "mSpeedLow"))
    window.mRadSpHigh.setValue(config.getfloat("Material", "mRadSpHigh"))
    window.mRadSpHalf.setValue(config.getfloat("Material", "mRadSpHalf"))
    window.mHeatSpHigh.setValue(config.getfloat("Material", "mHeatSpHigh"))
    window.mHeatSpLow.setValue(config.getfloat("Material", "mHeatSpLow"))
    window.mName.setText(config.get("Material", "mName"))
    window.mUsualCutSpeed.setValue(config.getfloat("Material", "mUsualCutSpeed"))        
    #self.validateAll(30) # recalculate and redraw cutting

def getTableFromFile(window,filename):
    config =  configparser.ConfigParser()
    config.add_section("Table")
    config.add_section("Cut")    
    config.read(filename)
    window.tableYY.setValue(config.getfloat("Table", "tableYY"))
    window.tableYG.setValue(config.getfloat("Table", "tableYG"))
    window.tableYD.setValue(config.getfloat("Table", "tableYD"))
    window.cMaxY.setValue(config.getfloat("Table", "cMaxY"))
    window.cMaxZ.setValue(config.getfloat("Table", "cMaxZ"))
    window.vMaxY.setValue(config.getfloat("Table", "vMaxY"))
    window.vMaxZ.setValue(config.getfloat("Table", "vMaxZ"))
    window.tHeatingMax.setValue(config.getfloat("Table", "tHeatingMax"))
    window.tName.setText(config.get("Table", "tName"))
    window.tComPort.insertItem(0,config.get("Table", "tComPort"))
    window.tComPort.setCurrentText(config.get("Table", "tComPort"))
    window.tBaudrate.setCurrentText(config.get("Table", "tBaudrate"))
    window.tPreHeat.setValue(config.getfloat("Table", "tPreHeat"))
    window.tPostHeat.setValue(config.getfloat("Table", "tPostHeat"))

    window.vCut.setValue(config.getfloat("Table", "vCut"))
    window.gCodeStart1.setText(config.get("Table", "gCodeStart1"))
    window.gCodeStart2.setText(config.get("Table", "gCodeStart2"))
    window.gCodeStart3.setText(config.get("Table", "gCodeStart3"))
    window.gCodeStart4.setText(config.get("Table", "gCodeStart4"))
    window.gCodeEnd1.setText(config.get("Table", "gCodeEnd1"))
    window.gCodeEnd2.setText(config.get("Table", "gCodeEnd2"))
    window.gCodeEnd3.setText(config.get("Table", "gCodeEnd3"))
    window.gCodeEnd4.setText(config.get("Table", "gCodeEnd4"))
    window.gCodeLetters.setText(config.get("Table", "gCodeLetters"))
            
    #self.validateAll(20) # recalculate and redraw cutting


def saveProjectToFile(window,fileName):
    config =  configparser.ConfigParser()
    config.add_section("Profil")
    config.add_section("Transform")
    config.add_section("Bloc")
    config.add_section("Material")
    config.add_section("Table")
    config.add_section("Cut")
    config.add_section("Guillotine")
            
    #save all paramaters
    config.set("Profil", "RootX", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oRootX]))))
    config.set("Profil", "RootY", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oRootY]))))
    config.set("Profil", "RootS", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oRootS]))))
    config.set("Profil", "TipX", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oTipX]))))
    config.set("Profil", "TipY", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oTipY]))))
    config.set("Profil", "TipS", str('[{:s}]'.format(', '.join(['{}'.format(x) for x in window.oTipS]))))
    
    config.set("Profil", "nameRoot" , window.nameRoot )
    config.set("Profil", "nameTip" , window.nameTip )

    config.set("Transform", "cRoot", str(window.cRoot.value()))
    config.set("Transform", "cTip", str(window.cTip.value()))
    config.set("Transform", "cbComplexProfiles", str(int(window.cbComplexProfiles.isChecked())))
    config.set("Transform", "incidenceRoot", str(window.incidenceRoot.value()))
    config.set("Transform", "thicknessRoot", str(window.thicknessRoot.value()))
    config.set("Transform", "vInvertRoot", str(int(window.vInvertRoot.isChecked())))
    config.set("Transform", "incidenceTip", str(window.incidenceTip.value()))
    config.set("Transform", "thicknessTip", str(window.thicknessTip.value()))
    config.set("Transform", "vInvertTip", str(int(window.vInvertTip.isChecked())))
    config.set("Transform", "covering", str(window.covering.value()))
    config.set("Transform", "keepChord", str(int(window.keepChord.isChecked())))
    config.set("Transform", "smooth", str(int(window.smooth.isChecked())))
    config.set("Transform", "nbrPoints", str(window.nbrPoints.value()))
    config.set("Transform", "repartition", str(window.repartition.value()))
    config.set("Transform", "reducePoints", str(int(window.reducePoints.isChecked())))

    config.set("Bloc", "blocLX", str(window.blocLX.value()))
    config.set("Bloc", "blocHZ", str(window.blocHZ.value()))
    config.set("Bloc", "fLeading", str(window.fLeading.value()))
    config.set("Bloc", "fTrailing", str(window.fTrailing.value()))
    config.set("Bloc", "mLeading", str(window.mLeading.value()))
    config.set("Bloc", "mTrailingRoot", str(window.mTrailingRoot.value()))
    config.set("Bloc", "mTrailingTip", str(window.mTrailingTip.value()))
    config.set("Bloc", "rbLeftWing", str(int(window.rbLeftWing.isChecked())))
    config.set("Bloc", "rbRightWing", str(int(window.rbRightWing.isChecked())))
    config.set("Bloc", "rbTableToBlockLeft" , str(int(window.rbTableToBlockLeft.isChecked())))
    config.set("Bloc", "rbTableToBlockRight" , str(int(window.rbTableToBlockRight.isChecked())))
    #config.set("Bloc", "blocPosition", window.blocPosition)
    config.set("Bloc", "blocToTableLeft", str(window.blocToTableLeft.value()))
    config.set("Bloc", "blocToTableRight", str(window.blocToTableRight.value()))
    config.set("Bloc", "blocToTableTrailingRoot", str(window.blocToTableTrailingRoot.value()))
    #config.set("Bloc", "blocToTableTrailingTip", str(window.blocToTableTrailingTip.value()))
    #config.set("Bloc", "blocToTableLeadingRoot", str(window.blocToTableLeadingRoot.value()))
    #config.set("Bloc", "blocToTableLeadingTip", str(window.blocToTableLeadingTip.value()))
    """
    config.set("Bloc", "hTrailingRoot", str(window.hTrailingRoot.value()))
    config.set("Bloc", "hTrailingTip", str(window.hTrailingTip.value()))
    config.set("Bloc", "hLeadingRoot", str(window.hLeadingRoot.value()))
    config.set("Bloc", "hLeadingTip", str(window.hLeadingTip.value()))
    config.set("Bloc", "hMaxRoot", str(window.hMaxRoot.value()))
    config.set("Bloc", "hMaxTip", str(window.hMaxTip.value()))
    config.set("Bloc", "hMinRoot", str(window.hMinRoot.value()))
    config.set("Bloc", "hMinTip", str(window.hMinTip.value()))
    """
    config.set("Bloc", "hOffset", str(window.hOffset.value()))
    config.set("Bloc", "hProfil", str(window.hProfil.value()))
    config.set("Bloc", "diedral", str(window.diedral.value()))
    config.set("Bloc", "cbAlignProfiles" , str(int(window.cbAlignProfiles.currentIndex())))
    #config.set("Bloc", "rbAlignTrailing" , str(int(window.rbAlignTrailing.isChecked())))
    #config.set("Bloc", "rbAlignLeading" , str(int(window.rbAlignLeading.isChecked())))
    #config.set("Bloc", "rbAlignIntrados" , str(int(window.rbAlignIntrados.isChecked())))
    #config.set("Bloc", "rbAlignExtrados" , str(int(window.rbAlignExtrados.isChecked())))
    # trailing edge angles
    config.set("Bloc", "angleInRoot", str(window.angleInRoot.value()))
    config.set("Bloc", "angleInTip", str(window.angleInTip.value()))
    config.set("Bloc", "angleOutRoot", str(window.angleOutRoot.value()))
    config.set("Bloc", "angleOutTip", str(window.angleOutTip.value()))
    # X leading cut
    config.set("Bloc","gbXLeadingActive" , str(int(window.gbXLeadingActive.isChecked() ) ) )
    config.set("Bloc","cbXLeadingCut" , window.cbXLeadingCut.currentText())
    config.set("Bloc","xLeadingAngle1Root" , str(window.xLeadingAngle1Root.value()))
    config.set("Bloc","xLeadingAngle2Root" , str(window.xLeadingAngle2Root.value()))
    config.set("Bloc","xLeadingAngle1Tip" , str(window.xLeadingAngle1Tip.value()))
    config.set("Bloc","xLeadingAngle2Tip" , str(window.xLeadingAngle2Tip.value()))
    config.set("Bloc","xLeadingHeight1Root" , str(window.xLeadingHeight1Root.value()))
    config.set("Bloc","xLeadingHeight2Root" , str(window.xLeadingHeight2Root.value()))
    config.set("Bloc","xLeadingHeight1Tip" , str(window.xLeadingHeight1Tip.value()))
    config.set("Bloc","xLeadingHeight2Tip" , str(window.xLeadingHeight2Tip.value()))
    config.set("Bloc","xLeadingLengthRoot" , str(window.xLeadingLengthRoot.value()))
    config.set("Bloc","xLeadingLengthTip" , str(window.xLeadingLengthTip.value()))


    config.set("Material", "mSpeedHigh", str(window.mSpeedHigh.value()))
    config.set("Material", "mSpeedHalf", str(window.mSpeedHalf.value()))
    config.set("Material", "mSpeedLow", str(window.mSpeedLow.value()))
    config.set("Material", "mRadSpHigh", str(window.mRadSpHigh.value()))
    config.set("Material", "mRadSpHalf", str(window.mRadSpHalf.value()))
    config.set("Material", "mHeatSpHigh", str(window.mHeatSpHigh.value()))
    config.set("Material", "mHeatSpLow", str(window.mHeatSpLow.value()))
    config.set("Material", "mName", window.mName.text())
    config.set("Material", "mUsualCutSpeed", str(window.mUsualCutSpeed.value()))

    config.set("Table", "tableYY", str(window.tableYY.value()))
    config.set("Table", "tableYG", str(window.tableYG.value()))
    config.set("Table", "tableYD", str(window.tableYD.value()))
    config.set("Table", "cMaxY", str(window.cMaxY.value()))
    config.set("Table", "cMaxZ", str(window.cMaxZ.value()))
    config.set("Table", "vMaxY", str(window.vMaxY.value()))
    config.set("Table", "vMaxZ", str(window.vMaxZ.value()))
    config.set("Table", "tHeatingMax", str(window.tHeatingMax.value()))
    config.set("Table", "tName", window.tName.text())
    config.set("Table", "tComPort", window.tComPort.currentText())
    config.set("Table", "tBaudrate", window.tBaudrate.currentText())
    config.set("Table", "tPreHeat", str(window.tPreHeat.value()))
    config.set("Table", "tPostHeat", str(window.tPostHeat.value()))
    
    config.set("Table", "vCut", str(window.vCut.value()))
    config.set("Table", "gCodeStart1", window.gCodeStart1.text())
    config.set("Table", "gCodeStart2", window.gCodeStart2.text())
    config.set("Table", "gCodeStart3", window.gCodeStart3.text())
    config.set("Table", "gCodeStart4", window.gCodeStart4.text())
    config.set("Table", "gCodeEnd1", window.gCodeEnd1.text())
    config.set("Table", "gCodeEnd2", window.gCodeEnd2.text())
    config.set("Table", "gCodeEnd3", window.gCodeEnd3.text())
    config.set("Table", "gCodeEnd4", window.gCodeEnd4.text())
    config.set("Table", "gCodeLetters", window.gCodeLetters.text())

    #config.set("Guillotine", "gVSpeedNoCut", str(window.gVSpeedNoCut.value()))
    #config.set("Guillotine", "gHSpeedNoCut", str(window.gHSpeedNoCut.value()))
    config.set("Guillotine", "gCuttingSpeed", str(window.gCuttingSpeed.value()))
    config.set("Guillotine", "gApplyCalculatedHeating", str(int(window.gApplyCalculatedHeating.isChecked())))
    config.set("Guillotine", "gHeating", str(window.gHeating.value()))
    config.write(open(fileName ,'w'))

def saveMaterialToFile(window,fileName):
    config =  configparser.ConfigParser()
    config.add_section("Material")
                
    config.set("Material", "mSpeedHigh", str(window.mSpeedHigh.value()))
    config.set("Material", "mSpeedHalf", str(window.mSpeedHalf.value()))
    config.set("Material", "mSpeedLow", str(window.mSpeedLow.value()))
    config.set("Material", "mRadSpHigh", str(window.mRadSpHigh.value()))
    config.set("Material", "mRadSpHalf", str(window.mRadSpHalf.value()))
    config.set("Material", "mHeatSpHigh", str(window.mHeatSpHigh.value()))
    config.set("Material", "mHeatSpLow", str(window.mHeatSpLow.value()))
    config.set("Material", "mName", window.mName.text())
    config.set("Material", "mUsualCutSpeed", str(window.mUsualCutSpeed.value()))

    config.write(open(fileName ,'w'))

def saveTableToFile(window,fileName):
    config =  configparser.ConfigParser()
    config.add_section("Table")
    
    config.set("Table", "tableYY", str(window.tableYY.value()))
    config.set("Table", "tableYG", str(window.tableYG.value()))
    config.set("Table", "tableYD", str(window.tableYD.value()))
    config.set("Table", "cMaxY", str(window.cMaxY.value()))
    config.set("Table", "cMaxZ", str(window.cMaxZ.value()))
    config.set("Table", "vMaxY", str(window.vMaxY.value()))
    config.set("Table", "vMaxZ", str(window.vMaxZ.value()))
    config.set("Table", "tHeatingMax", str(window.tHeatingMax.value()))
    config.set("Table", "tName", window.tName.text())
    config.set("Table", "tComPort", window.tComPort.currentText())
    config.set("Table", "tBaudrate", window.tBaudrate.currentText())
    config.set("Table", "tPreHeat", str(window.tPreHeat.value()))
    config.set("Table", "tPostHeat", str(window.tPostHeat.value()))
    
    config.set("Table", "vCut", str(window.vCut.value()))
    config.set("Table", "gCodeStart1", window.gCodeStart1.text())
    config.set("Table", "gCodeStart2", window.gCodeStart2.text())
    config.set("Table", "gCodeStart3", window.gCodeStart3.text())
    config.set("Table", "gCodeStart4", window.gCodeStart4.text())
    config.set("Table", "gCodeEnd1", window.gCodeEnd1.text())
    config.set("Table", "gCodeEnd2", window.gCodeEnd2.text())
    config.set("Table", "gCodeEnd3", window.gCodeEnd3.text())
    config.set("Table", "gCodeEnd4", window.gCodeEnd4.text())
    config.set("Table", "gCodeLetters", window.gCodeLetters.text())

    config.write(open(fileName ,'w'))

def projection(x1 , x2 , y1 , y2, xi , xj):
    a = (y2 - y1) / (x2 - x1)
    b = y1 - a * x1
    yi = (a * xi) + b
    yj = (a * xj) + b
    return yi , yj
